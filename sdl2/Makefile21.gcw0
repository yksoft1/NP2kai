CC=/opt/gcw0-toolchain/usr/bin/mipsel-linux-cc
AR=/opt/gcw0-toolchain/usr/bin/mipsel-linux-ar
CXX=/opt/gcw0-toolchain/usr/bin/mipsel-linux-g++

DEBUG=0
SUPPORT_NET?=1
SDL_VERSION ?= 2
GIT_VERSION := " $(shell git rev-parse --short HEAD)"

ifeq ($(SDL_VERSION), 1)
SDL_CONFIG ?= /opt/gcw0-toolchain/usr/mipsel-gcw0-linux-uclibc/sysroot/usr/bin/sdl-config
SDL_OTHER_LIBS ?= -lSDL_ttf -lSDL_mixer
SUPPORT_ASYNC_CPU ?=
SDL_CFLAGS := $(shell $(SDL_CONFIG) --cflags) -DUSE_SDL_CONFIG
#SDL_LIBS := $(shell $(SDL_CONFIG) --libs)
SDL_LIBS := -lSDL
else
SDL_CONFIG ?= /opt/gcw0-toolchain/usr/mipsel-gcw0-linux-uclibc/sysroot/usr/bin/sdl2-config
SDL_OTHER_LIBS ?= -lSDL2_ttf -lSDL2_mixer
SUPPORT_ASYNC_CPU ?= -DSUPPORT_ASYNC_CPU
SDL_CFLAGS := $(shell $(SDL_CONFIG) --cflags) -DUSE_SDL_CONFIG
#SDL_LIBS := $(shell $(SDL_CONFIG) --libs)
SDL_LIBS := -lSDL2
endif

TARGET_NAME := np21kai

TARGET := $(TARGET_NAME)
LDFLAGS := -L/opt/gcw0-toolchain/usr/lib
fpic = -fPIC

ifeq ($(DEBUG), 1)
COMMONFLAGS += -O0 -g
else
COMMONFLAGS += -O3 -DNDEBUG -DGIT_VERSION=\"$(GIT_VERSION)\"
endif

CORE_DIR    := ..
SOURCES_C   :=
SOURCES_CXX :=

include Makefile.common

INCFLAGS := $(SDL_CFLAGS) $(INCFLAGS)

INCFLAGS += 	-I$(NP2_PATH)/sdl2/gcw0
SOURCES_C += 	$(NP2_PATH)/sdl2/gcw0/main.c

INCFLAGS += 	-I$(NP2_PATH)/i386c \
		-I$(NP2_PATH)/i386c/ia32 \
		-I$(NP2_PATH)/i386c/ia32/instructions \
		-I$(NP2_PATH)/i386c/ia32/instructions/fpu \
		-I$(NP2_PATH)/i386c/ia32/instructions/fpu/softfloat \
		-I$(NP2_PATH)/i386c/ia32/instructions/mmx \
		-I$(NP2_PATH)/i386c/ia32/instructions/sse
SOURCES_C += 	$(wildcard $(NP2_PATH)/i386c/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/*.c) \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpdummy.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_dosbox.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_dosbox2.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_softfloat.c \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/fpu/softfloat/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/mmx/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse2/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse3/*.c)

OBJECTS  = $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.c=.o)
CXXFLAGS += $(fpic) $(INCFLAGS) $(COMMONFLAGS) -DGCW0 -DNP2_SDL2 -DUSE_SDLAUDIO -DUSE_SDLMIXER -DCPUCORE_IA32 -DSUPPORT_PC9821 -DUSE_FPU -DSUPPORT_LARGE_HDD -DSUPPORT_VPCVHD -DSUPPORT_KAI_IMAGES -DHOOK_SYSKEY -DALLOW_MULTIRUN -DSUPPORT_WAB -DSUPPORT_LARGE_MEMORY -DSUPPORT_CL_GD5430 -DUSE_MAME -DSUPPORT_FMGEN -DSUPPORT_SOUND_SB16 -DSUPPORT_GAMEPORT -DSUPPORT_FPU_DOSBOX -DSUPPORT_FPU_DOSBOX2 -DSUPPORT_FPU_SOFTFLOAT -DSUPPORT_SMPU98 -DSUPPORT_ASYNC_CPU -DSUPPORT_RS232C_FIFO -DSUPPORT_PEGC -DSUPPORT_GPIB -DSUPPORT_PCI -DUSE_MMX -DUSE_3DNOW -DUSE_SSE -DUSE_SSE2 -DUSE_SSE3 -DUSE_TSC -DUSE_FASTPAGING -DUSE_VME -DBIOS_IO_EMULATION -DSUPPORT_NP2_THREAD -DNP2_THREAD_SDL2 -std=gnu++11
#-DSUPPORT_FAST_MEMORYCHECK -DSUPPORT_NVL_IMAGES
CFLAGS   += $(fpic) $(INCFLAGS) $(COMMONFLAGS) -DGCW0 -DNP2_SDL2 -DUSE_SDLAUDIO -DUSE_SDLMIXER -DCPUCORE_IA32 -DSUPPORT_PC9821 -DUSE_FPU -DSUPPORT_LARGE_HDD -DSUPPORT_VPCVHD -DSUPPORT_KAI_IMAGES -DHOOK_SYSKEY -DALLOW_MULTIRUN -DSUPPORT_WAB -DSUPPORT_LARGE_MEMORY -DSUPPORT_CL_GD5430 -DUSE_MAME -DSUPPORT_FMGEN -DSUPPORT_SOUND_SB16 -DSUPPORT_GAMEPORT -DSUPPORT_FPU_DOSBOX -DSUPPORT_FPU_DOSBOX2 -DSUPPORT_FPU_SOFTFLOAT -DSUPPORT_SMPU98 -DSUPPORT_ASYNC_CPU -DSUPPORT_RS232C_FIFO -DSUPPORT_PEGC -DSUPPORT_GPIB -DSUPPORT_PCI -DUSE_MMX -DUSE_3DNOW -DUSE_SSE -DUSE_SSE2 -DUSE_SSE3 -DUSE_TSC -DUSE_FASTPAGING -DUSE_VME -DBIOS_IO_EMULATION -DSUPPORT_NP2_THREAD -DNP2_THREAD_SDL2 -std=gnu11
#-DSUPPORT_FAST_MEMORYCHECK -DSUPPORT_NVL_IMAGES
LDFLAGS  += $(fpic) -lm -lpthread $(SDL_LIBS) $(SDL_OTHER_LIBS)

ifeq ($(SUPPORT_NET), 1)
CXXFLAGS += -DSUPPORT_NET -DSUPPORT_LGY98 -L/opt/gcw0-toolchain/usr/lib
CFLAGS   += -DSUPPORT_NET -DSUPPORT_LGY98
endif


all: buildopk
$(TARGET): $(OBJECTS)
ifeq ($(STATIC_LINKING), 1)
	$(AR) rcs $@ $(OBJECTS)
else
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)
endif

%.o: %.c
	$(CC) $(CFLAGS) -c $^ -o $@

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $^ -o $@


clean:
	rm -f $(OBJECTS) $(TARGET)
	rm -f *.opk
	rm -f opk/$(TARGET)
	rm -f opk/default.gcw0.desktop
	rm -f compile_commands.json
	rm -f cppcheck.xml

cppcheck: compile_commands.json
	cppcheck --project=compile_commands.json --xml 2> cppcheck.xml

compile_commands.json:
	bear make -f Makefile21.gcw0


buildopk: $(TARGET)
	cp -f $(TARGET) ./opk
	cp ./opk/default_gcw0_$(TARGET)_desktop ./opk/default.gcw0.desktop
	mksquashfs ./opk $(TARGET).opk -all-root -noappend -no-exports


uninstall:
	rm /usr/local/bin/$(TARGET)
